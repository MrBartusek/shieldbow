import{_ as s,r as i,o as d,c as u,a as t,b as a,w as l,e}from"./app.ef83c763.js";const r={},h=t("h1",{id:"api-reference",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#api-reference","aria-hidden":"true"},"#"),e(" API Reference")],-1),_=t("h2",{id:"classes",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#classes","aria-hidden":"true"},"#"),e(" Classes")],-1),c=t("thead",null,[t("tr",null,[t("th",null,"Class"),t("th",null,"Description")])],-1),m=e("Account"),p=t("td",null,"A representation of a RIOT account.",-1),f=e("AccountManager"),g=t("td",null,"An account manager - to fetch and manage all the RIOT accounts.",-1),D=e("ApiError"),T=t("td",null,"API error class.",-1),P=e("ApiHandler"),y=t("td",null,"A class that handles API requests and rate limits for the RIOT API.",-1),v=e("Bounty"),A=t("td",null,"A representation of the bounty on a match participant.",-1),b=e("Champion"),C=t("td",null,"A representation of a League of Legends champion.",-1),S=e("ChampionManager"),k=t("td",null,"A champion manager - to fetch and manage all the champion data.",-1),M=e("ChampionMastery"),I=t("td",null,"A representation of a summoner's mastery over a champion.",-1),E=e("ChampionMasteryManager"),L=t("td",null,"A champion mastery manager - to fetch and manage all summoner's champion mastery data.",-1),G=e("ChampionSkin"),F=t("td",null,"A representation of a champion's skin (visual modification).",-1),R=e("ChampionSpell"),B=t("td",null,"The representation of a champion's spell (ability).",-1),x=e("ChampionStat"),O=t("td",null,"A representation of the champion's base stats.",-1),w=e("ClashManager"),V=t("td",null,"A clash manager - to fetch and store clash tournaments and related data.",-1),j=e("Client"),K=t("td",null,"The shieldbow client that enables you to interact with Riot Games' League of Legends API. Also connects to the Data Dragon + Community Dragon CDNs.",-1),U=e("CurrentGame"),q=t("td",null,"A representation of an ongoing game.",-1),N=e("CurrentGameManager"),Q=t("td",null,"A current game manager - to fetch and manage the live games.",-1),H=e("CurrentGameParticipant"),W=t("td",null,"A representation of a participant in a live game.",-1),z=e("CurrentGamePerks"),J=t("td",null,"A representation of the rune setup of a live game participant.",-1),X=e("CurrentGameTeam"),Y=t("td",null,"A representation of a team in a live game.",-1),Z=e("Item"),$=t("td",null,"A representation of an in-game item.",-1),tt=e("ItemManager"),et=t("td",null,"An item manager - to fetch and manage all item data.",-1),at=e("LeagueEntry"),nt=t("td",null,"A representation of a summoner's competitive details.",-1),lt=e("LeagueList"),ot=t("td",null,"A representation of a list of league entries.",-1),it=e("LeagueManager"),st=t("td",null,"A league manager - to fetch and manage all summoner competitive info.",-1),dt=e("Match"),ut=t("td",null,"A representation of a league of legends match.",-1),rt=e("MatchManager"),ht=t("td",null,"A match manager - to fetch and manage matches.",-1),_t=e("MatchTimeline"),ct=t("td",null,"A representation of the timeline data for a match.",-1),mt=e("Participant"),pt=t("td",null,"A representation of a participant in a match.",-1),ft=e("ParticipantFrame"),gt=t("td",null,"A representation of a participant's stats at a point in the timeline.",-1),Dt=e("ParticipantFrameChampionStats"),Tt=e("A representation of the participant's champion stats in a "),Pt={href:"/api/ParticipantFrame.md#undefined",target:"_blank",rel:"noopener noreferrer"},yt=e("ParticipantFrame"),vt=e("."),At=e("ParticipantFrameDamageStats"),bt=e("A representation of the participant's damage stats in a "),Ct={href:"/api/ParticipantFrame.md#undefined",target:"_blank",rel:"noopener noreferrer"},St=e("ParticipantFrame"),kt=e("."),Mt=e("Perks"),It=t("td",null,"A representation of the perks (runes) selected by a summoner for a match.",-1),Et=e("PerkStyle"),Lt=t("td",null,"A representation of a perk style - a tree and 4 (if primary) or 2 (if secondary) runes that were selected.",-1),Gt=e("Position"),Ft=t("td",null,null,-1),Rt=e("Ratelimiter"),Bt=t("td",null,"A utility class that handles ratelimits.",-1),xt=e("Rune"),Ot=t("td",null,"A representation of an in-game rune.",-1),wt=e("RuneTree"),Vt=t("td",null,"A representation of an in-game rune tree",-1),jt=e("RuneTreeManager"),Kt=t("td",null,"A rune trees manager - to fetch and manage rune trees data.",-1),Ut=e("StorageManager"),qt=t("td",null,"A basic manager for storing and fetching the local cached JSON files.",-1),Nt=e("Summoner"),Qt=t("td",null,"A representation of a summoner (player).",-1),Ht=e("SummonerManager"),Wt=t("td",null,"A summoner manager - to fetch and manage all the summoner data.",-1),zt=e("SummonerSpell"),Jt=t("td",null,"A representation of an in-game summoner spell.",-1),Xt=e("SummonerSpellManager"),Yt=t("td",null,"A spell manager - to fetch and manage all summoner spell data.",-1),Zt=e("Team"),$t=t("td",null,"A representation of a team in a match.",-1),te=e("TimelineFrame"),ee=t("td",null,null,-1),ae=e("Tournament"),ne=t("td",null,"A representation of a clash tournament.",-1),le=e("TournamentPlayer"),oe=t("td",null,"A representation of a player in a clash tournament.",-1),ie=e("TournamentSchedule"),se=t("td",null,"A representation of a clash tournament schedule.",-1),de=e("TournamentTeam"),ue=t("td",null,"A representation of a team in a clash tournament.",-1),re=t("hr",null,null,-1),he=t("h2",{id:"functions",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#functions","aria-hidden":"true"},"#"),e(" Functions")],-1),_e=t("thead",null,[t("tr",null,[t("th",null,"Function"),t("th",null,"Description")])],-1),ce=e("arrToString(values)"),me=t("td",null,"Parses the float values and returns rounded strings.",-1),pe=e("hash(str, { size })"),fe=t("td",null,"A simple fnv1a hashing utility - to help with community dragon data parsing.",-1),ge=e("multiply(part1, part2)"),De=t("td",null,"Multiplies two spell calculation parts.",-1),Te=e("performMath(calculation, effects, datavalue, maxRank, options)"),Pe=t("td",null,"A function that takes in calculations and performs the necessary operations to generate appropriate tooltips.",-1),ye=e("round(value)"),ve=t("td",null,"Rounds the value to up to 2 decimal points.",-1),Ae=t("hr",null,null,-1),be=t("h2",{id:"interfaces",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#interfaces","aria-hidden":"true"},"#"),e(" Interfaces")],-1),Ce=t("thead",null,[t("tr",null,[t("th",null,"Interface"),t("th",null,"Description")])],-1),Se=e("AccountData"),ke=t("td",null,"The account data structure as returned by the API.",-1),Me=e("ApiRequestOptions"),Ie=t("td",null,"The API request options.",-1),Ee=e("BaseManager"),Le=t("td",null,"A base for any manager classes.",-1),Ge=e("BuildingKillEventData"),Fe=t("td",null,"The event data for building kill event.",-1),Re=e("CacheConfig"),Be=t("td",null,"Client's data dragon cache configuration.",-1),xe=e("ChampionBan"),Oe=t("td",null,"A banned champion in a match.",-1),we=e("ChampionData"),Ve=t("td",null,"A representation of the champion data returned by Data Dragon.",-1),je=e("ChampionKillEventData"),Ke=t("td",null,"The event data for the champion kill event.",-1),Ue=e("ChampionMasteryData"),qe=t("td",null,"The champion mastery data as returned by the API.",-1),Ne=e("ChampionPassive"),Qe=t("td",null,"The data about a champion's passive.",-1),He=e("ChampionPricing"),We=t("td",null,"The pricing data of a champion.",-1),ze=e("ChampionRating"),Je=t("td",null,"A representation of the champion rating data returned by Data Dragon.",-1),Xe=e("ChampionSkinData"),Ye=t("td",null,"A representation of the champion skin data returned by Data Dragon.",-1),Ze=e("ChampionSpecialKillEventData"),$e=t("td",null,"The event data for the champion special kill event.",-1),ta=e("ClientConfig"),ea=t("td",null,"The basic configuration for the shieldbow Client.",-1),aa=e("CurrentGameBanData"),na=t("td",null,"The champion ban data as returned by the API.",-1),la=e("CurrentGameChampionBan"),oa=t("td",null,"Current game's team's champion ban information.",-1),ia=e("CurrentGameData"),sa=t("td",null,"The Current game data as returned by the API.",-1),da=e("CurrentGameParticipantData"),ua=t("td",null,"The Current game participant data as returned by the API.",-1),ra=e("CurrentGamePerksData"),ha=t("td",null,"The current game participant perks data as returned by the API.",-1),_a=e("DamageDealtData"),ca=t("td",null,"The data of the damage dealt on a champion during their death on the map.",-1),ma=e("EliteMonsterKillEventData"),pa=t("td",null,"The event data for the elite monster kill event.",-1),fa=e("FetchOptions"),ga=t("td",null,"The basic fetching options for various fetch methods in the managers.",-1),Da=e("GameEndEventData"),Ta=t("td",null,"The event data for the game end event.",-1),Pa=e("GameMap"),ya=t("td",null,"Basic data for types of Maps available in the game.",-1),va=e("GameMode"),Aa=t("td",null,"Basic data for types of game modes.",-1),ba=e("GameType"),Ca=t("td",null,"Basic data for types of games.",-1),Sa=e("ImageData"),ka=t("td",null,"A representation of any image data returned by Data Dragon.",-1),Ma=e("ItemData"),Ia=t("td",null,"A representation of the item data returned by Data Dragon.",-1),Ea=e("ItemDestroyedEventData"),La=t("td",null,"The event data for the item destroyed event.",-1),Ga=e("ItemGoldValue"),Fa=t("td",null,"The item's gold value information.",-1),Ra=e("ItemPurchasedEventData"),Ba=t("td",null,"The event data for the item purchased event.",-1),xa=e("ItemSoldEventData"),Oa=t("td",null,"The event data for the item sold event.",-1),wa=e("ItemUndoEventData"),Va=t("td",null,"The event data for the item undo event.",-1),ja=e("LeagueEntryData"),Ka=t("td",null,"The league entry data as returned by the API.",-1),Ua=e("LeagueListData"),qa=t("td",null,"The league list data as returned by the API.",-1),Na=e("LevelUpEventData"),Qa=t("td",null,"The event data for the champion level up event.",-1),Ha=e("MatchByPlayerOptions"),Wa=t("td",null,"Additional options for filtering a specific summoner's matches.",-1),za=e("MatchData"),Ja=t("td",null,"The match data as returned by the API.",-1),Xa=e("MatchTimelineData"),Ya=t("td",null,"The match timeline data as returned by the API.",-1),Za=e("MatchTimelineFrameData"),$a=t("td",null,"The match timeline frame as returned by the API.",-1),tn=e("MatchTimelineInfo"),en=t("td",null,"The match timeline details as returned by the API.",-1),an=e("MatchTimelineMetadata"),nn=t("td",null,"The match timeline metadata as returned by the API.",-1),ln=e("MerakiChampion"),on=t("td",null,"A representation of the champion data returned by meraki analytics. These are used in the LoL wiki.",-1),sn=e("MerakiSkin"),dn=t("td",null,"A representation of a champion's skin data returned by meraki analytics. These are used in the LoL wiki.",-1),un=e("ObjectiveBountyPrestartEventData"),rn=t("td",null,"The event data for the objective bounty prestart event.",-1),hn=e("ParticipantChampion"),_n=t("td",null,"The participant's champion details.",-1),cn=e("ParticipantChampionStatsData"),mn=t("td",null,"The participant champion stats as returned by the API.",-1),pn=e("ParticipantDamageStats"),fn=t("td",null,"The participant's damage stats.",-1),gn=e("ParticipantDamageStatsData"),Dn=t("td",null,"The participant damage stats as returned by the API.",-1),Tn=e("ParticipantData"),Pn=t("td",null,"Match participant data as returned by the API",-1),yn=e("ParticipantFrameData"),vn=t("td",null,"The Participant Frame as returned by the API.",-1),An=e("ParticipantHealingStats"),bn=t("td",null,"The participant's healing stats.",-1),Cn=e("ParticipantInhibitorStats"),Sn=t("td",null,"The participant's inhibitor interaction information.",-1),kn=e("ParticipantMultkills"),Mn=t("td",null,"The participant's multikill details.",-1),In=e("ParticipantPosition"),En=t("td",null,"The participant position details.",-1),Ln=e("ParticipantTotalDamage"),Gn=t("td",null,"The participant's total damage stats.",-1),Fn=e("ParticipantTurretStats"),Rn=t("td",null,"The participant's turret interaction information.",-1),Bn=e("ParticipantVision"),xn=t("td",null,"The participant's vision details.",-1),On=e("PauseEndEventData"),wn=t("td",null,"The event data for the pause end event.",-1),Vn=e("PerksData"),jn=t("td",null,"The perks data for a match participant as returned by the API.",-1),Kn=e("PositionData"),Un=t("td",null,"A representation of an object's position on the map.",-1),qn=e("PreFetchConfig"),Nn=t("td",null,"Client's pre-fetching data from data dragon configuration",-1),Qn=e("Promos"),Hn=t("td",null,"The league entry promotion series information.",-1),Wn=e("Queue"),zn=t("td",null,"Basic data for types of queues (matches) in the game.",-1),Jn=e("RuneData"),Xn=t("td",null,"The runes data as stored in data dragon.",-1),Yn=e("RuneTreeData"),Zn=t("td",null,"The rune trees data as stored in data dragon.",-1),$n=e("Season"),tl=t("td",null,"Basic data of seasons of the game.",-1),el=e("SkillLevelUpEventData"),al=t("td",null,"The event data for the skill level up event.",-1),nl=e("SkinChroma"),ll=t("td",null,"A representation of a champion's skin's chroma from meraki analytics.",-1),ol=e("SkinPricing"),il=t("td",null,"A representation of a champion's skin's pricing from meraki analytics.",-1),sl=e("SpellDamageData"),dl=t("td",null,"A representation of the champion spell data returned by Community Dragon.",-1),ul=e("SpellData"),rl=t("td",null,"A representation of the champion spell data returned by Data Dragon.",-1),hl=e("StatPerk"),_l=t("td",null,"The stat perks data for a match participant as returned by the API.",-1),cl=e("StatPerks"),ml=t("td",null,"A representation of the stat perks selected by the summoner.",-1),pl=e("SummonerData"),fl=t("td",null,"The summoner data as returned by the API.",-1),gl=e("SummonerSpellData"),Dl=t("td",null,"The summoner spell data as stored in data dragon.",-1),Tl=e("TeamBanData"),Pl=t("td",null,"The champion ban data as returned by the API.",-1),yl=e("TeamData"),vl=t("td",null,"The match team data as returned by the API.",-1),Al=e("TeamObjectiveData"),bl=t("td",null,"The individual objective data as returned by the API.",-1),Cl=e("TeamObjectivesData"),Sl=t("td",null,"The match team objective data as returned by the API.",-1),kl=e("TimelineEventData"),Ml=t("td",null,"The base of a match timeline event.",-1),Il=e("TournamentData"),El=t("td",null,"The clash tournament data as returned by the API.",-1),Ll=e("TournamentPlayerData"),Gl=t("td",null,"The partial clash tournament player data as returned by the API.",-1),Fl=e("TournamentPlayerFullData"),Rl=t("td",null,"The complete clash tournament player data as returned by the API.",-1),Bl=e("TournamentScheduleData"),xl=t("td",null,"The clash tournament schedule data as returned by the API.",-1),Ol=e("TournamentTeamData"),wl=t("td",null,"The clash tournament team data as returned by the API.",-1),Vl=e("TurretPlateDestroyedEventData"),jl=t("td",null,"The event data for the turret plate destroyed event.",-1),Kl=e("WardKillEventData"),Ul=t("td",null,"The event data for the ward kill event.",-1),ql=e("WardPlacedEventData"),Nl=t("td",null,"The event data for the ward placed event.",-1),Ql=t("hr",null,null,-1),Hl=t("h2",{id:"variables",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#variables","aria-hidden":"true"},"#"),e(" Variables")],-1),Wl=t("thead",null,[t("tr",null,[t("th",null,"Variable"),t("th",null,"Description")])],-1),zl=e("locale"),Jl=t("td",null,"A list of all valid locales.",-1),Xl=e("Stat"),Yl=t("td",null,"An array of all possible statistics needed for spell math.",-1),Zl=e("StatFormula"),$l=t("td",null,"The part of the stat that needs to be considered during spell math.",-1),to=e("statPerks"),eo=t("td",null,"The available stat perks.",-1),ao=t("hr",null,null,-1),no=t("h2",{id:"type-aliases",tabindex:"-1"},[t("a",{class:"header-anchor",href:"#type-aliases","aria-hidden":"true"},"#"),e(" Type Aliases")],-1),lo=t("thead",null,[t("tr",null,[t("th",null,"Type Alias"),t("th",null,"Description")])],-1),oo=e("DivisionType"),io=t("td",null,"Valid divisions for league entries.",-1),so=e("Locales"),uo=t("td",null,"A valid locale to fetch the data in.",-1),ro=e("QueueType"),ho=t("td",null,"The valid type of Queues by which league entries are mapped.",-1),_o=e("Region"),co=t("td",null,"A valid League of Legends region.",-1),mo=e("Stats"),po=t("td",null,"A valid champion stat that affects their in-game interactions.",-1),fo=e("TierType"),go=t("td",null,"Valid tiers for league entries.",-1);function Do(To,Po){const n=i("RouterLink"),o=i("ExternalLinkIcon");return d(),u("div",null,[h,_,t("table",null,[c,t("tbody",null,[t("tr",null,[t("td",null,[a(n,{to:"/api/Account.html"},{default:l(()=>[m]),_:1})]),p]),t("tr",null,[t("td",null,[a(n,{to:"/api/AccountManager.html"},{default:l(()=>[f]),_:1})]),g]),t("tr",null,[t("td",null,[a(n,{to:"/api/ApiError.html"},{default:l(()=>[D]),_:1})]),T]),t("tr",null,[t("td",null,[a(n,{to:"/api/ApiHandler.html"},{default:l(()=>[P]),_:1})]),y]),t("tr",null,[t("td",null,[a(n,{to:"/api/Bounty.html"},{default:l(()=>[v]),_:1})]),A]),t("tr",null,[t("td",null,[a(n,{to:"/api/Champion.html"},{default:l(()=>[b]),_:1})]),C]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionManager.html"},{default:l(()=>[S]),_:1})]),k]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionMastery.html"},{default:l(()=>[M]),_:1})]),I]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionMasteryManager.html"},{default:l(()=>[E]),_:1})]),L]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionSkin.html"},{default:l(()=>[G]),_:1})]),F]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionSpell.html"},{default:l(()=>[R]),_:1})]),B]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionStat.html"},{default:l(()=>[x]),_:1})]),O]),t("tr",null,[t("td",null,[a(n,{to:"/api/ClashManager.html"},{default:l(()=>[w]),_:1})]),V]),t("tr",null,[t("td",null,[a(n,{to:"/api/Client.html"},{default:l(()=>[j]),_:1})]),K]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGame.html"},{default:l(()=>[U]),_:1})]),q]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameManager.html"},{default:l(()=>[N]),_:1})]),Q]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameParticipant.html"},{default:l(()=>[H]),_:1})]),W]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGamePerks.html"},{default:l(()=>[z]),_:1})]),J]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameTeam.html"},{default:l(()=>[X]),_:1})]),Y]),t("tr",null,[t("td",null,[a(n,{to:"/api/Item.html"},{default:l(()=>[Z]),_:1})]),$]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemManager.html"},{default:l(()=>[tt]),_:1})]),et]),t("tr",null,[t("td",null,[a(n,{to:"/api/LeagueEntry.html"},{default:l(()=>[at]),_:1})]),nt]),t("tr",null,[t("td",null,[a(n,{to:"/api/LeagueList.html"},{default:l(()=>[lt]),_:1})]),ot]),t("tr",null,[t("td",null,[a(n,{to:"/api/LeagueManager.html"},{default:l(()=>[it]),_:1})]),st]),t("tr",null,[t("td",null,[a(n,{to:"/api/Match.html"},{default:l(()=>[dt]),_:1})]),ut]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchManager.html"},{default:l(()=>[rt]),_:1})]),ht]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchTimeline.html"},{default:l(()=>[_t]),_:1})]),ct]),t("tr",null,[t("td",null,[a(n,{to:"/api/Participant.html"},{default:l(()=>[mt]),_:1})]),pt]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantFrame.html"},{default:l(()=>[ft]),_:1})]),gt]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantFrameChampionStats.html"},{default:l(()=>[Dt]),_:1})]),t("td",null,[Tt,t("a",Pt,[yt,a(o)]),vt])]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantFrameDamageStats.html"},{default:l(()=>[At]),_:1})]),t("td",null,[bt,t("a",Ct,[St,a(o)]),kt])]),t("tr",null,[t("td",null,[a(n,{to:"/api/Perks.html"},{default:l(()=>[Mt]),_:1})]),It]),t("tr",null,[t("td",null,[a(n,{to:"/api/PerkStyle.html"},{default:l(()=>[Et]),_:1})]),Lt]),t("tr",null,[t("td",null,[a(n,{to:"/api/Position.html"},{default:l(()=>[Gt]),_:1})]),Ft]),t("tr",null,[t("td",null,[a(n,{to:"/api/Ratelimiter.html"},{default:l(()=>[Rt]),_:1})]),Bt]),t("tr",null,[t("td",null,[a(n,{to:"/api/Rune.html"},{default:l(()=>[xt]),_:1})]),Ot]),t("tr",null,[t("td",null,[a(n,{to:"/api/RuneTree.html"},{default:l(()=>[wt]),_:1})]),Vt]),t("tr",null,[t("td",null,[a(n,{to:"/api/RuneTreeManager.html"},{default:l(()=>[jt]),_:1})]),Kt]),t("tr",null,[t("td",null,[a(n,{to:"/api/StorageManager.html"},{default:l(()=>[Ut]),_:1})]),qt]),t("tr",null,[t("td",null,[a(n,{to:"/api/Summoner.html"},{default:l(()=>[Nt]),_:1})]),Qt]),t("tr",null,[t("td",null,[a(n,{to:"/api/SummonerManager.html"},{default:l(()=>[Ht]),_:1})]),Wt]),t("tr",null,[t("td",null,[a(n,{to:"/api/SummonerSpell.html"},{default:l(()=>[zt]),_:1})]),Jt]),t("tr",null,[t("td",null,[a(n,{to:"/api/SummonerSpellManager.html"},{default:l(()=>[Xt]),_:1})]),Yt]),t("tr",null,[t("td",null,[a(n,{to:"/api/Team.html"},{default:l(()=>[Zt]),_:1})]),$t]),t("tr",null,[t("td",null,[a(n,{to:"/api/TimelineFrame.html"},{default:l(()=>[te]),_:1})]),ee]),t("tr",null,[t("td",null,[a(n,{to:"/api/Tournament.html"},{default:l(()=>[ae]),_:1})]),ne]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentPlayer.html"},{default:l(()=>[le]),_:1})]),oe]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentSchedule.html"},{default:l(()=>[ie]),_:1})]),se]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentTeam.html"},{default:l(()=>[de]),_:1})]),ue])])]),re,he,t("table",null,[_e,t("tbody",null,[t("tr",null,[t("td",null,[a(n,{to:"/api/arrToString.html"},{default:l(()=>[ce]),_:1})]),me]),t("tr",null,[t("td",null,[a(n,{to:"/api/hash.html"},{default:l(()=>[pe]),_:1})]),fe]),t("tr",null,[t("td",null,[a(n,{to:"/api/multiply.html"},{default:l(()=>[ge]),_:1})]),De]),t("tr",null,[t("td",null,[a(n,{to:"/api/performMath.html"},{default:l(()=>[Te]),_:1})]),Pe]),t("tr",null,[t("td",null,[a(n,{to:"/api/round.html"},{default:l(()=>[ye]),_:1})]),ve])])]),Ae,be,t("table",null,[Ce,t("tbody",null,[t("tr",null,[t("td",null,[a(n,{to:"/api/AccountData.html"},{default:l(()=>[Se]),_:1})]),ke]),t("tr",null,[t("td",null,[a(n,{to:"/api/ApiRequestOptions.html"},{default:l(()=>[Me]),_:1})]),Ie]),t("tr",null,[t("td",null,[a(n,{to:"/api/BaseManager.html"},{default:l(()=>[Ee]),_:1})]),Le]),t("tr",null,[t("td",null,[a(n,{to:"/api/BuildingKillEventData.html"},{default:l(()=>[Ge]),_:1})]),Fe]),t("tr",null,[t("td",null,[a(n,{to:"/api/CacheConfig.html"},{default:l(()=>[Re]),_:1})]),Be]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionBan.html"},{default:l(()=>[xe]),_:1})]),Oe]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionData.html"},{default:l(()=>[we]),_:1})]),Ve]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionKillEventData.html"},{default:l(()=>[je]),_:1})]),Ke]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionMasteryData.html"},{default:l(()=>[Ue]),_:1})]),qe]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionPassive.html"},{default:l(()=>[Ne]),_:1})]),Qe]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionPricing.html"},{default:l(()=>[He]),_:1})]),We]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionRating.html"},{default:l(()=>[ze]),_:1})]),Je]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionSkinData.html"},{default:l(()=>[Xe]),_:1})]),Ye]),t("tr",null,[t("td",null,[a(n,{to:"/api/ChampionSpecialKillEventData.html"},{default:l(()=>[Ze]),_:1})]),$e]),t("tr",null,[t("td",null,[a(n,{to:"/api/ClientConfig.html"},{default:l(()=>[ta]),_:1})]),ea]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameBanData.html"},{default:l(()=>[aa]),_:1})]),na]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameChampionBan.html"},{default:l(()=>[la]),_:1})]),oa]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameData.html"},{default:l(()=>[ia]),_:1})]),sa]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGameParticipantData.html"},{default:l(()=>[da]),_:1})]),ua]),t("tr",null,[t("td",null,[a(n,{to:"/api/CurrentGamePerksData.html"},{default:l(()=>[ra]),_:1})]),ha]),t("tr",null,[t("td",null,[a(n,{to:"/api/DamageDealtData.html"},{default:l(()=>[_a]),_:1})]),ca]),t("tr",null,[t("td",null,[a(n,{to:"/api/EliteMonsterKillEventData.html"},{default:l(()=>[ma]),_:1})]),pa]),t("tr",null,[t("td",null,[a(n,{to:"/api/FetchOptions.html"},{default:l(()=>[fa]),_:1})]),ga]),t("tr",null,[t("td",null,[a(n,{to:"/api/GameEndEventData.html"},{default:l(()=>[Da]),_:1})]),Ta]),t("tr",null,[t("td",null,[a(n,{to:"/api/GameMap.html"},{default:l(()=>[Pa]),_:1})]),ya]),t("tr",null,[t("td",null,[a(n,{to:"/api/GameMode.html"},{default:l(()=>[va]),_:1})]),Aa]),t("tr",null,[t("td",null,[a(n,{to:"/api/GameType.html"},{default:l(()=>[ba]),_:1})]),Ca]),t("tr",null,[t("td",null,[a(n,{to:"/api/ImageData.html"},{default:l(()=>[Sa]),_:1})]),ka]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemData.html"},{default:l(()=>[Ma]),_:1})]),Ia]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemDestroyedEventData.html"},{default:l(()=>[Ea]),_:1})]),La]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemGoldValue.html"},{default:l(()=>[Ga]),_:1})]),Fa]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemPurchasedEventData.html"},{default:l(()=>[Ra]),_:1})]),Ba]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemSoldEventData.html"},{default:l(()=>[xa]),_:1})]),Oa]),t("tr",null,[t("td",null,[a(n,{to:"/api/ItemUndoEventData.html"},{default:l(()=>[wa]),_:1})]),Va]),t("tr",null,[t("td",null,[a(n,{to:"/api/LeagueEntryData.html"},{default:l(()=>[ja]),_:1})]),Ka]),t("tr",null,[t("td",null,[a(n,{to:"/api/LeagueListData.html"},{default:l(()=>[Ua]),_:1})]),qa]),t("tr",null,[t("td",null,[a(n,{to:"/api/LevelUpEventData.html"},{default:l(()=>[Na]),_:1})]),Qa]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchByPlayerOptions.html"},{default:l(()=>[Ha]),_:1})]),Wa]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchData.html"},{default:l(()=>[za]),_:1})]),Ja]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchTimelineData.html"},{default:l(()=>[Xa]),_:1})]),Ya]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchTimelineFrameData.html"},{default:l(()=>[Za]),_:1})]),$a]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchTimelineInfo.html"},{default:l(()=>[tn]),_:1})]),en]),t("tr",null,[t("td",null,[a(n,{to:"/api/MatchTimelineMetadata.html"},{default:l(()=>[an]),_:1})]),nn]),t("tr",null,[t("td",null,[a(n,{to:"/api/MerakiChampion.html"},{default:l(()=>[ln]),_:1})]),on]),t("tr",null,[t("td",null,[a(n,{to:"/api/MerakiSkin.html"},{default:l(()=>[sn]),_:1})]),dn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ObjectiveBountyPrestartEventData.html"},{default:l(()=>[un]),_:1})]),rn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantChampion.html"},{default:l(()=>[hn]),_:1})]),_n]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantChampionStatsData.html"},{default:l(()=>[cn]),_:1})]),mn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantDamageStats.html"},{default:l(()=>[pn]),_:1})]),fn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantDamageStatsData.html"},{default:l(()=>[gn]),_:1})]),Dn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantData.html"},{default:l(()=>[Tn]),_:1})]),Pn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantFrameData.html"},{default:l(()=>[yn]),_:1})]),vn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantHealingStats.html"},{default:l(()=>[An]),_:1})]),bn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantInhibitorStats.html"},{default:l(()=>[Cn]),_:1})]),Sn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantMultkills.html"},{default:l(()=>[kn]),_:1})]),Mn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantPosition.html"},{default:l(()=>[In]),_:1})]),En]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantTotalDamage.html"},{default:l(()=>[Ln]),_:1})]),Gn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantTurretStats.html"},{default:l(()=>[Fn]),_:1})]),Rn]),t("tr",null,[t("td",null,[a(n,{to:"/api/ParticipantVision.html"},{default:l(()=>[Bn]),_:1})]),xn]),t("tr",null,[t("td",null,[a(n,{to:"/api/PauseEndEventData.html"},{default:l(()=>[On]),_:1})]),wn]),t("tr",null,[t("td",null,[a(n,{to:"/api/PerksData.html"},{default:l(()=>[Vn]),_:1})]),jn]),t("tr",null,[t("td",null,[a(n,{to:"/api/PositionData.html"},{default:l(()=>[Kn]),_:1})]),Un]),t("tr",null,[t("td",null,[a(n,{to:"/api/PreFetchConfig.html"},{default:l(()=>[qn]),_:1})]),Nn]),t("tr",null,[t("td",null,[a(n,{to:"/api/Promos.html"},{default:l(()=>[Qn]),_:1})]),Hn]),t("tr",null,[t("td",null,[a(n,{to:"/api/Queue.html"},{default:l(()=>[Wn]),_:1})]),zn]),t("tr",null,[t("td",null,[a(n,{to:"/api/RuneData.html"},{default:l(()=>[Jn]),_:1})]),Xn]),t("tr",null,[t("td",null,[a(n,{to:"/api/RuneTreeData.html"},{default:l(()=>[Yn]),_:1})]),Zn]),t("tr",null,[t("td",null,[a(n,{to:"/api/Season.html"},{default:l(()=>[$n]),_:1})]),tl]),t("tr",null,[t("td",null,[a(n,{to:"/api/SkillLevelUpEventData.html"},{default:l(()=>[el]),_:1})]),al]),t("tr",null,[t("td",null,[a(n,{to:"/api/SkinChroma.html"},{default:l(()=>[nl]),_:1})]),ll]),t("tr",null,[t("td",null,[a(n,{to:"/api/SkinPricing.html"},{default:l(()=>[ol]),_:1})]),il]),t("tr",null,[t("td",null,[a(n,{to:"/api/SpellDamageData.html"},{default:l(()=>[sl]),_:1})]),dl]),t("tr",null,[t("td",null,[a(n,{to:"/api/SpellData.html"},{default:l(()=>[ul]),_:1})]),rl]),t("tr",null,[t("td",null,[a(n,{to:"/api/StatPerk.html"},{default:l(()=>[hl]),_:1})]),_l]),t("tr",null,[t("td",null,[a(n,{to:"/api/StatPerks.html"},{default:l(()=>[cl]),_:1})]),ml]),t("tr",null,[t("td",null,[a(n,{to:"/api/SummonerData.html"},{default:l(()=>[pl]),_:1})]),fl]),t("tr",null,[t("td",null,[a(n,{to:"/api/SummonerSpellData.html"},{default:l(()=>[gl]),_:1})]),Dl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TeamBanData.html"},{default:l(()=>[Tl]),_:1})]),Pl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TeamData.html"},{default:l(()=>[yl]),_:1})]),vl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TeamObjectiveData.html"},{default:l(()=>[Al]),_:1})]),bl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TeamObjectivesData.html"},{default:l(()=>[Cl]),_:1})]),Sl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TimelineEventData.html"},{default:l(()=>[kl]),_:1})]),Ml]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentData.html"},{default:l(()=>[Il]),_:1})]),El]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentPlayerData.html"},{default:l(()=>[Ll]),_:1})]),Gl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentPlayerFullData.html"},{default:l(()=>[Fl]),_:1})]),Rl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentScheduleData.html"},{default:l(()=>[Bl]),_:1})]),xl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TournamentTeamData.html"},{default:l(()=>[Ol]),_:1})]),wl]),t("tr",null,[t("td",null,[a(n,{to:"/api/TurretPlateDestroyedEventData.html"},{default:l(()=>[Vl]),_:1})]),jl]),t("tr",null,[t("td",null,[a(n,{to:"/api/WardKillEventData.html"},{default:l(()=>[Kl]),_:1})]),Ul]),t("tr",null,[t("td",null,[a(n,{to:"/api/WardPlacedEventData.html"},{default:l(()=>[ql]),_:1})]),Nl])])]),Ql,Hl,t("table",null,[Wl,t("tbody",null,[t("tr",null,[t("td",null,[a(n,{to:"/api/locale.html"},{default:l(()=>[zl]),_:1})]),Jl]),t("tr",null,[t("td",null,[a(n,{to:"/api/Stat.html"},{default:l(()=>[Xl]),_:1})]),Yl]),t("tr",null,[t("td",null,[a(n,{to:"/api/StatFormula.html"},{default:l(()=>[Zl]),_:1})]),$l]),t("tr",null,[t("td",null,[a(n,{to:"/api/statPerks.html"},{default:l(()=>[to]),_:1})]),eo])])]),ao,no,t("table",null,[lo,t("tbody",null,[t("tr",null,[t("td",null,[a(n,{to:"/api/DivisionType.html"},{default:l(()=>[oo]),_:1})]),io]),t("tr",null,[t("td",null,[a(n,{to:"/api/Locales.html"},{default:l(()=>[so]),_:1})]),uo]),t("tr",null,[t("td",null,[a(n,{to:"/api/QueueType.html"},{default:l(()=>[ro]),_:1})]),ho]),t("tr",null,[t("td",null,[a(n,{to:"/api/Region.html"},{default:l(()=>[_o]),_:1})]),co]),t("tr",null,[t("td",null,[a(n,{to:"/api/Stats.html"},{default:l(()=>[mo]),_:1})]),po]),t("tr",null,[t("td",null,[a(n,{to:"/api/TierType.html"},{default:l(()=>[fo]),_:1})]),go])])])])}var vo=s(r,[["render",Do],["__file","index.html.vue"]]);export{vo as default};
