import{_ as i,r as c,o as l,c as u,a as s,b as a,w as e,d as p,e as n}from"./app.ef83c763.js";const r={},d=p(`<h1 id="data-fetching" tabindex="-1"><a class="header-anchor" href="#data-fetching" aria-hidden="true">#</a> Data Fetching</h1><p>The shieldbow client is designed to allow you to fetch data from all sources such as the static files, data dragon, and the RIOT API using a single client. It is designed to allow you to fetch anything the way you want to.</p><h3 id="data-dragon" tabindex="-1"><a class="header-anchor" href="#data-dragon" aria-hidden="true">#</a> Data Dragon</h3><p>Data dragon hosts files that are updated every 2 weeks (sometimes more frequently), with each patch of the game. It offers data about game objects such as champions, in-game items, runes, etc.</p><p>The code below, can be used to fetch the data using the shieldbow client about the champion - Kayn.</p><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Fetching data from the data dragon does not require a working API key. This is all simple JSON data publicly available.</p><p>If your application needs only this, you can get away without providing a valid API Key during client construction.</p></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> kayn <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>champions<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;Kayn&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,7),k=n("Here, "),h=s("code",null,"kayn",-1),m=n(" is going to be a "),g=n("Champion"),v=n(" object."),f=p(`<p>We can use this object to get any kind of data about the champion. Some examples are shown below.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kayn<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span>   <span class="token comment">// Kayn</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kayn<span class="token punctuation">.</span>title<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token comment">// The shadow reaper</span>

<span class="token comment">// We can also print a list of all the skins of the champion.</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kayn<span class="token punctuation">.</span>skins<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>skin <span class="token operator">=&gt;</span> skin<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Default, Soulhunter, Odyssey ...</span>

<span class="token comment">// Or the list of all the spells (abilities) of the champion.</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kayn<span class="token punctuation">.</span>spells<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>spell <span class="token operator">=&gt;</span> spell<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;, &#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Reaping Slash, Blade&#39;s Reach ...</span>

<span class="token comment">// Note that the passive is not included in the spells collection.</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>kayn<span class="token punctuation">.</span>passive<span class="token punctuation">.</span>name<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// The Darkin Scythe</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>Other data types from data dragon</summary><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">/* Items */</span>
<span class="token keyword">const</span> boots <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>items<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;1001&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Summoner spells */</span>
<span class="token keyword">const</span> flash <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summonerSpells<span class="token punctuation">.</span><span class="token function">findByName</span><span class="token punctuation">(</span><span class="token string">&#39;Flash&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Rune trees */</span>
<span class="token keyword">const</span> domination <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>runes<span class="token punctuation">.</span><span class="token function">fetch</span><span class="token punctuation">(</span><span class="token string">&#39;Domination&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">/* Runes */</span>
<span class="token keyword">await</span> client<span class="token punctuation">.</span>runes<span class="token punctuation">.</span><span class="token function">fetchRune</span><span class="token punctuation">(</span><span class="token string">&#39;Electrocute&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><hr><h3 id="fetching-data-from-the-api" tabindex="-1"><a class="header-anchor" href="#fetching-data-from-the-api" aria-hidden="true">#</a> Fetching data from the API.</h3>`,5),_={class:"custom-container tip"},b=s("p",{class:"custom-container-title"},"TIP",-1),y=n("Before moving further, make sure you have a valid API key from the "),w={href:"https://developer.riotgames.com/",target:"_blank",rel:"noopener noreferrer"},x=n("RIOT API Dashboard"),I=s("p",null,"And also ensure that you are providing it to the client during client construction.",-1),A=p(`<p>As stated above, the shieldbow client is designed to be easy to use. Therefore, it is just as simple to fetch any kind of data from the API as it was from data dragon.</p><p>For instance, lets try fetching the summoner data for the summoner <code>TheDrone7</code> (region <code>EUW</code>).</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> summoner <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summoners<span class="token punctuation">.</span><span class="token function">fetchBySummonerName</span><span class="token punctuation">(</span><span class="token string">&#39;TheDrone7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,3),S=n("Here, we are using the client's default "),E=n("Summoner Manager"),M=n(" to fetch the summoner using their summoner name."),T=s("p",null,"As specified in the API docs, you can also use the summoner ID, account ID, or the puuid (referred to as playerId in shieldbow) to fetch a summoner's details.",-1),D=n("The returned object is a "),L=n("Summoner"),N=n(" object."),R=p(`<p>Again, thanks to the design choices, you can also fetch other information about the summoner, such as their league rankings, by simply using the <code>summoner.fetchLeagueEntries()</code> method.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> leagues <span class="token operator">=</span> <span class="token keyword">await</span> summoner<span class="token punctuation">.</span><span class="token function">fetchLeagueEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,2),O=n("This will return a promise that will resolve to a collection of "),P=n("LeagueEntry"),$=n(" object."),q=n("A "),Q={href:"https://discord.js.org/#/docs/collection/stable/class/Collection",target:"_blank",rel:"noopener noreferrer"},B=n("Collection"),K=n(" is an extension of the "),C={href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",target:"_blank",rel:"noopener noreferrer"},j=n("Map"),F=n(" builtin class."),H=p(`<p>It stores data in a key-value pair and provides additional methods to manipulate the data better.</p><p>In the returned collection of league entries, the entries are mapped using the type of queue they belong to.</p><p>For example, to get their solo queue standings, you can use the key <code>RANKED_SOLO_5x5</code> or for the flex queue, <code>RANKED_FLEX_SR</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> soloQ <span class="token operator">=</span> leagues<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_SOLO_5x5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> flex <span class="token operator">=</span> leagues<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_FLEX_SR&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>soloQ<span class="token punctuation">.</span>tier<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IRON (or DIAMOND, etc.)</span>
<span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>flex<span class="token punctuation">.</span>tier<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// IRON (or DIAMOND, etc.)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><hr><h3 id="regional-fetching" tabindex="-1"><a class="header-anchor" href="#regional-fetching" aria-hidden="true">#</a> Regional fetching.</h3>`,6),G=n("Now, for no reason, lets extend "),W={href:"/guide/getting-started.md#example-usage",target:"_blank",rel:"noopener noreferrer"},z=n("the example from getting started page"),U=n(" and compare the noob's details to the GOAT's."),V=p(`<p>If we try the following</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> summoner <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summoners<span class="token punctuation">.</span><span class="token function">fetchBySummonerName</span><span class="token punctuation">(</span><span class="token string">&#39;hide on bush&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> leagueEntry <span class="token operator">=</span> <span class="token keyword">await</span> summoner<span class="token punctuation">.</span><span class="token function">fetchLeagueEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> championMastery <span class="token operator">=</span> summoner<span class="token punctuation">.</span>championMastery<span class="token punctuation">;</span>
  
<span class="token keyword">const</span> soloQ <span class="token operator">=</span> leagueEntry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_SOLO_5x5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> highest <span class="token operator">=</span> <span class="token keyword">await</span> championMastery<span class="token punctuation">.</span><span class="token function">highest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Unfortunately, we will get errors because we initialized the client with the <code>euw</code> region. But <code>hide on bush</code> plays in the <code>kr</code> region.</p><p>To avoid these errors, we can simply just provide additional options while fetching the summoner and include a region option as follows.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> summoner <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summoners<span class="token punctuation">.</span><span class="token function">fetchBySummonerName</span><span class="token punctuation">(</span><span class="token string">&#39;hide on bush&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> region<span class="token operator">:</span> <span class="token string">&#39;kr&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> leagueEntry <span class="token operator">=</span> <span class="token keyword">await</span> summoner<span class="token punctuation">.</span><span class="token function">fetchLeagueEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> 
<span class="token keyword">const</span> championMastery <span class="token operator">=</span> summoner<span class="token punctuation">.</span>championMastery<span class="token punctuation">;</span>
  
<span class="token keyword">const</span> soloQ <span class="token operator">=</span> leagueEntry<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_SOLO_5x5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> highest <span class="token operator">=</span> <span class="token keyword">await</span> championMastery<span class="token punctuation">.</span><span class="token function">highest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Shieldbow, will only use the region <code>kr</code> when fetching the summoner and any related details.</p><p>To explain this further, lets take the above code and combine it with the code from the getting started page.</p><p>We would get</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> Client <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;shieldbow&#39;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> client <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Client</span><span class="token punctuation">(</span><span class="token string">&#39;MY_API_KEY&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

client<span class="token punctuation">.</span><span class="token function">initialize</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  region<span class="token operator">:</span> <span class="token string">&#39;euw&#39;</span> <span class="token comment">// defaults to &#39;na&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// After initialization, you can use the client to make requests</span>
  <span class="token keyword">const</span> summoner1 <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summoners<span class="token punctuation">.</span><span class="token function">fetchBySummonerName</span><span class="token punctuation">(</span><span class="token string">&#39;TheDrone7&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> summoner2 <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>summoners<span class="token punctuation">.</span><span class="token function">fetchBySummonerName</span><span class="token punctuation">(</span><span class="token string">&#39;hide on bush&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> region<span class="token operator">:</span> <span class="token string">&#39;kr&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> leagueEntry1 <span class="token operator">=</span> <span class="token keyword">await</span> summoner1<span class="token punctuation">.</span><span class="token function">fetchLeagueEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> leagueEntry2 <span class="token operator">=</span> <span class="token keyword">await</span> summoner2<span class="token punctuation">.</span><span class="token function">fetchLeagueEntries</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> championMastery1 <span class="token operator">=</span> summoner1<span class="token punctuation">.</span>championMastery<span class="token punctuation">;</span>
  <span class="token keyword">const</span> championMastery2 <span class="token operator">=</span> summoner2<span class="token punctuation">.</span>championMastery<span class="token punctuation">;</span>

  <span class="token keyword">const</span> soloQ1 <span class="token operator">=</span> leagueEntry1<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_SOLO_5x5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> soloQ2 <span class="token operator">=</span> leagueEntry2<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">&#39;RANKED_SOLO_5x5&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> highest1 <span class="token operator">=</span> <span class="token keyword">await</span> championMastery1<span class="token punctuation">.</span><span class="token function">highest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token keyword">const</span> highest2 <span class="token operator">=</span> <span class="token keyword">await</span> championMastery2<span class="token punctuation">.</span><span class="token function">highest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Summoner name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>summoner1<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (level: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>summoner1<span class="token punctuation">.</span>level<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SoloQ: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ1<span class="token punctuation">.</span>tier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ1<span class="token punctuation">.</span>division<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ1<span class="token punctuation">.</span>lp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> LP).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Highest champion mastery: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest1<span class="token punctuation">.</span>champion<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (M</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest1<span class="token punctuation">.</span>level<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest1<span class="token punctuation">.</span>points<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> points).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;\\n\\n&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Summoner name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>summoner2<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (level: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>summoner2<span class="token punctuation">.</span>level<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">SoloQ: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ2<span class="token punctuation">.</span>tier<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ2<span class="token punctuation">.</span>division<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>soloQ2<span class="token punctuation">.</span>lp<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> LP).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Highest champion mastery: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest2<span class="token punctuation">.</span>champion<span class="token punctuation">.</span>name<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> (M</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest2<span class="token punctuation">.</span>level<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>highest2<span class="token punctuation">.</span>points<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> points).</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><details class="custom-container details"><summary>Sample output</summary><div class="language-text ext-text line-numbers-mode"><pre class="language-text"><code>Summoner name: TheDrone7 (level: 261).
SoloQ: BRONZE III (9 LP).
Highest champion mastery: Kayn (M7 255687 points).



Summoner name: Hide on bush (level: 565).
SoloQ: CHALLENGER I (900 LP).
Highest champion mastery: LeBlanc (M7 492301 points).
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><p>As stated above, the client will by default use the region it was initialized with, in this case <code>euw</code>.</p><p>Therefore, when fetching the summoner 1 - <code>TheDrone7</code>, the request is sent to <code>euw</code>.</p><p>However, while fetching summoner 2 - <code>hide on bush</code>, the request is sent to <code>kr</code>, as specified.</p><p>Now when we fetch any related details for summoner 2, such as the league entry, the shieldbow client learns the summoner&#39;s region and sends the request is sent to <code>kr</code> automatically.</p><p>Therefore, you only need to specify the region while fetching the summoner and the related details are automatically fetched from the appropriate region.</p><p>This is also why it works fine for both summoners.</p><p>NOTE: Since the region is still set to <code>euw</code>, the client will still send all requests without a summoner or region specified to <code>euw</code>.</p><p>To change the default region of the client, you can simply use the following line of code.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code>client<span class="token punctuation">.</span>region <span class="token operator">=</span> <span class="token string">&#39;na&#39;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Which will set the default region to <code>na</code>. You can also use any other region similarly to change the default region of the shieldbow client.</p><hr><h3 id="supported-apis" tabindex="-1"><a class="header-anchor" href="#supported-apis" aria-hidden="true">#</a> Supported APIs</h3><p>The client has other managers to fetch other kinds of data from the API.</p>`,23),Y=n("Account Manager"),J=n(" - "),X=s("code",null,"client.accounts",-1),Z=n("."),nn=n("Clash Manager"),sn=n(" - "),an=s("code",null,"client.clash",-1),tn=n("."),en=n("Leagues Manager"),on=n(" - "),pn=s("code",null,"client.leagues",-1),cn=n("."),ln=n("Match Manager"),un=n(" - "),rn=s("code",null,"client.matches",-1),dn=n("."),kn=n("Summoner Manager"),hn=n(" - "),mn=s("code",null,"client.summoners",-1),gn=n("."),vn=n("Current Game manager"),fn=n(" - "),_n=s("code",null,"client.spectator",-1),bn=n("."),yn=s("hr",null,null,-1),wn=s("h3",{id:"unsupported-apis",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#unsupported-apis","aria-hidden":"true"},"#"),n(" Unsupported APIs")],-1),xn=s("p",null,"Currently, unsupported (under development) API features are:",-1),In={href:"https://developer.riotgames.com/apis#match-v5/GET_getTimeline",target:"_blank",rel:"noopener noreferrer"},An=n("Match timeline"),Sn={href:"https://developer.riotgames.com/apis#tournament-v4",target:"_blank",rel:"noopener noreferrer"},En=n("Tournament v4"),Mn={href:"https://developer.riotgames.com/apis#tournament-stub-v4",target:"_blank",rel:"noopener noreferrer"},Tn=n("Tournament stub v4"),Dn=p(`<hr><h3 id="extending-the-client" tabindex="-1"><a class="header-anchor" href="#extending-the-client" aria-hidden="true">#</a> Extending the client</h3><div class="custom-container danger"><p class="custom-container-title">DANGER</p><p>Using the client with other unsupported APIs is not recommended but is possible.</p></div><p>For this example, we will simply fetch the match timelines.</p><p>The shieldbow client uses an <code>ApiHandler</code> to fetch the data from the API. This take cares of stuff such as ratelimiting but needs additional parameters to provided proper errors when encountered.</p><p>Below is how you would use the client to fetch the match timelines.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">const</span> matchId <span class="token operator">=</span> <span class="token string">&#39;some match ID here&#39;</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> client<span class="token punctuation">.</span>api<span class="token punctuation">.</span><span class="token function">makeApiRequest</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">/lol/match/v5/matches/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>matchId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/timeline</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">{</span>
  name<span class="token operator">:</span> <span class="token string">&#39;Fetch match timeline by match ID&#39;</span><span class="token punctuation">,</span>
  params<span class="token operator">:</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">Match ID: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>matchId<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
  regional<span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span>error <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">// Some error ocurred while fetching the data.</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">if</span> <span class="token punctuation">(</span>response <span class="token operator">&amp;&amp;</span> response<span class="token punctuation">.</span>data<span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>response<span class="token punctuation">.</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// Logs the match timeline data.</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Here, in the additional options, we provide</p><ol><li><code>name</code> - A text that indicates what request you were making.</li><li><code>params</code> - A text that indicates the parameters that were used.</li><li><code>regional</code> - A boolean that indicates if the request is regional or not. Regional requests are requests that are ones that are made to regions such as <code>Americas</code>, <code>Europe</code>, etc. Keep it false if you want to use the base urls for regions such as <code>euw</code>, <code>na</code>, etc.</li></ol><hr><h3 id="the-end" tabindex="-1"><a class="header-anchor" href="#the-end" aria-hidden="true">#</a> The End</h3>`,11),Ln=n("This is the end of the guide. Feel free to check out the "),Nn=n("API documentation"),Rn=n(" for more detailed information about the package."),On=n("Also feel free to create a "),Pn={href:"https://github.com/TheDrone7/shieldbow/issues",target:"_blank",rel:"noopener noreferrer"},$n=n("Github issue"),qn=n(" if you have any suggestions or questions."),Qn=n("If you use discord, you can always reach out to me on "),Bn={href:"https://discord.gg/riotgamesdevrel",target:"_blank",rel:"noopener noreferrer"},Kn=n("Riot games third party developers server"),Cn=n(". My username and tag is "),jn=s("code",null,"@TheDrone7#1624",-1),Fn=n(".");function Hn(Gn,Wn){const t=c("RouterLink"),o=c("ExternalLinkIcon");return l(),u("div",null,[d,s("p",null,[k,h,m,a(t,{to:"/api/Champion.html"},{default:e(()=>[g]),_:1}),v]),f,s("div",_,[b,s("p",null,[y,s("a",w,[x,a(o)])]),I]),A,s("p",null,[S,a(t,{to:"/api/SummonerManager.html"},{default:e(()=>[E]),_:1}),M]),T,s("p",null,[D,a(t,{to:"/api/Summoner.html"},{default:e(()=>[L]),_:1}),N]),R,s("p",null,[O,a(t,{to:"/api/LeagueEntry.html"},{default:e(()=>[P]),_:1}),$]),s("p",null,[q,s("a",Q,[B,a(o)]),K,s("a",C,[j,a(o)]),F]),H,s("p",null,[G,s("a",W,[z,a(o)]),U]),V,s("ol",null,[s("li",null,[a(t,{to:"/api/AccountManager.html"},{default:e(()=>[Y]),_:1}),J,X,Z]),s("li",null,[a(t,{to:"/api/ClashManager.html"},{default:e(()=>[nn]),_:1}),sn,an,tn]),s("li",null,[a(t,{to:"/api/LeagueManager.html"},{default:e(()=>[en]),_:1}),on,pn,cn]),s("li",null,[a(t,{to:"/api/MatchManager.html"},{default:e(()=>[ln]),_:1}),un,rn,dn]),s("li",null,[a(t,{to:"/api/SummonerManager.html"},{default:e(()=>[kn]),_:1}),hn,mn,gn]),s("li",null,[a(t,{to:"/api/CurrentGameManager.html"},{default:e(()=>[vn]),_:1}),fn,_n,bn])]),yn,wn,xn,s("ul",null,[s("li",null,[s("a",In,[An,a(o)])]),s("li",null,[s("a",Sn,[En,a(o)])]),s("li",null,[s("a",Mn,[Tn,a(o)])])]),Dn,s("p",null,[Ln,a(t,{to:"/api/"},{default:e(()=>[Nn]),_:1}),Rn]),s("p",null,[On,s("a",Pn,[$n,a(o)]),qn]),s("p",null,[Qn,s("a",Bn,[Kn,a(o)]),Cn,jn,Fn])])}var Un=i(r,[["render",Hn],["__file","fetching.html.vue"]]);export{Un as default};
